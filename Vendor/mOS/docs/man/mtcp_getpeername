.TH mtcp_getpeername 3 2017-08-28 "Linux" "mOS Library Functions Manual"
.SH NAME
mtcp_getpeername \- get name of end hosts being monitored by mOS
.SH SYNOPSIS
.B #include <mos_api.h>
.sp
.BI "int mtcp_getpeername(mctx_t " mctx ", int " sockfd ", struct sockaddr *" addr ", socklen_t *" addrlen, int " side " );

.SH DESCRIPTION
.BR mtcp_getpeername () 
returns the address of the end hosts that is being monitored
by the socket
.I "sockfd"
,
in the buffer pointed to by
.I "addr."
The
.I "addrlen"
argument should be initialized to indicate the amount of space
(in bytes) pointed to by
.I "addr."
On return it contains the actual size of the socket address.

.I "side"
variable should be properly set
to specify on which side this function is interested in.

If
.I "side"
argument is set to have
.I "MOS_SIDE_CLI"
or 
.I "MOS_SIDE_SVR"
,
.I "addrlen"
should be
.I "sizeof(struct sockaddr)"
, and it will fill up the address buffer at
.I "addr"
with the address of the corresponding side.

If
.I "side"
argument is set to have
.I "MOS_SIDE_BOTH"
,
.I "addrlen"
should be
.I "2 * sizeof(struct sockaddr)"
, and it will fill up the address buffer at
.I "addr"
with the address of the corresponding side. The client-side address can be referred as
.I "addr[MOS_SIDE_CLI]"
, and the server-side can be referred as
.I "addr[MOS_SIDE_SVR]"
.

An 
.BR mtcp_getpeername ()
call takes an additional argument named 
.I "mctx"
that represents the per-core mTCP context in an application
(see
.BR mtcp_create_context()
for details).
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH RETURN VALUE
Returns zero on success; -1 on failure. In case
of failure,
.I "errno"
is set appropriately.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH ERRORS
.TP 10
.B "EBADF"
The argument
.I "sockfd"
is not a valid socket descriptor.

.TP 10
.B "EINVAL"
.I "addrlen"
argument is invalid (e.g., is negative).

.TP 10
.B "ENOTCONN"
The argument
.I "sockfd"
is pointing to a mOS socket which has no corresponding stream
that is being monitored.

.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\""""".SH CONFORMING TO
.\"""""POSIX.1-2001.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH NOTES
The third argument of 
.BR mtcp_getpeername()
is in reality an
.I "int *"
(and this is what 4.x BSD and libc4 and libc5 have). Some
POSIX confusion resulted in the present
.I "socklen_t",
also used by glibc.
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH AUTHORS
mOS development team <mtcp-user@list.ndsl.kaist.edu>
.\"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH SEE ALSO
.BR mtcp_bind (),
.BR mtcp_socket ()
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""
.SH COLOPHON
This page is part of mOS release 0.3
.I "docs"
section. A description of the project, and information
about reporting bugs, can be found at
\%http://mos.kaist.edu/.
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""
